

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jan 19 19:09:26 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F690 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011E                     	;# 
   134  011F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0115                     	;# 
   201  0116                     	;# 
   202  0118                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011B                     	;# 
   206  011E                     	;# 
   207  011F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  019D                     	;# 
   211  019E                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  010C                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  010F                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0118                     	;# 
   276  0119                     	;# 
   277  011A                     	;# 
   278  011B                     	;# 
   279  011E                     	;# 
   280  011F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  019D                     	;# 
   284  019E                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  008C                     	;# 
   321  008D                     	;# 
   322  008E                     	;# 
   323  008F                     	;# 
   324  0090                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0093                     	;# 
   328  0093                     	;# 
   329  0094                     	;# 
   330  0095                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0096                     	;# 
   334  0097                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009A                     	;# 
   338  009B                     	;# 
   339  009E                     	;# 
   340  009F                     	;# 
   341  010C                     	;# 
   342  010C                     	;# 
   343  010D                     	;# 
   344  010E                     	;# 
   345  010F                     	;# 
   346  0115                     	;# 
   347  0116                     	;# 
   348  0118                     	;# 
   349  0119                     	;# 
   350  011A                     	;# 
   351  011B                     	;# 
   352  011E                     	;# 
   353  011F                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  019D                     	;# 
   357  019E                     	;# 
   358  0000                     	;# 
   359  0001                     	;# 
   360  0002                     	;# 
   361  0003                     	;# 
   362  0004                     	;# 
   363  0005                     	;# 
   364  0006                     	;# 
   365  0007                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001C                     	;# 
   386  001D                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  0081                     	;# 
   390  0085                     	;# 
   391  0086                     	;# 
   392  0087                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  008F                     	;# 
   397  0090                     	;# 
   398  0092                     	;# 
   399  0093                     	;# 
   400  0093                     	;# 
   401  0093                     	;# 
   402  0094                     	;# 
   403  0095                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0096                     	;# 
   407  0097                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009A                     	;# 
   411  009B                     	;# 
   412  009E                     	;# 
   413  009F                     	;# 
   414  010C                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  0115                     	;# 
   420  0116                     	;# 
   421  0118                     	;# 
   422  0119                     	;# 
   423  011A                     	;# 
   424  011B                     	;# 
   425  011E                     	;# 
   426  011F                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  019D                     	;# 
   430  019E                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  000E                     	;# 
   445  000F                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001C                     	;# 
   459  001D                     	;# 
   460  001E                     	;# 
   461  001F                     	;# 
   462  0081                     	;# 
   463  0085                     	;# 
   464  0086                     	;# 
   465  0087                     	;# 
   466  008C                     	;# 
   467  008D                     	;# 
   468  008E                     	;# 
   469  008F                     	;# 
   470  0090                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0093                     	;# 
   475  0094                     	;# 
   476  0095                     	;# 
   477  0095                     	;# 
   478  0096                     	;# 
   479  0096                     	;# 
   480  0097                     	;# 
   481  0098                     	;# 
   482  0099                     	;# 
   483  009A                     	;# 
   484  009B                     	;# 
   485  009E                     	;# 
   486  009F                     	;# 
   487  010C                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  0115                     	;# 
   493  0116                     	;# 
   494  0118                     	;# 
   495  0119                     	;# 
   496  011A                     	;# 
   497  011B                     	;# 
   498  011E                     	;# 
   499  011F                     	;# 
   500  018C                     	;# 
   501  018D                     	;# 
   502  019D                     	;# 
   503  019E                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  000E                     	;# 
   518  000F                     	;# 
   519  0010                     	;# 
   520  0011                     	;# 
   521  0012                     	;# 
   522  0013                     	;# 
   523  0014                     	;# 
   524  0015                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0017                     	;# 
   528  0018                     	;# 
   529  0019                     	;# 
   530  001A                     	;# 
   531  001C                     	;# 
   532  001D                     	;# 
   533  001E                     	;# 
   534  001F                     	;# 
   535  0081                     	;# 
   536  0085                     	;# 
   537  0086                     	;# 
   538  0087                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  008E                     	;# 
   542  008F                     	;# 
   543  0090                     	;# 
   544  0092                     	;# 
   545  0093                     	;# 
   546  0093                     	;# 
   547  0093                     	;# 
   548  0094                     	;# 
   549  0095                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0115                     	;# 
   566  0116                     	;# 
   567  0118                     	;# 
   568  0119                     	;# 
   569  011A                     	;# 
   570  011B                     	;# 
   571  011E                     	;# 
   572  011F                     	;# 
   573  018C                     	;# 
   574  018D                     	;# 
   575  019D                     	;# 
   576  019E                     	;# 
   577  0000                     	;# 
   578  0001                     	;# 
   579  0002                     	;# 
   580  0003                     	;# 
   581  0004                     	;# 
   582  0005                     	;# 
   583  0006                     	;# 
   584  0007                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  000E                     	;# 
   591  000F                     	;# 
   592  0010                     	;# 
   593  0011                     	;# 
   594  0012                     	;# 
   595  0013                     	;# 
   596  0014                     	;# 
   597  0015                     	;# 
   598  0015                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001C                     	;# 
   605  001D                     	;# 
   606  001E                     	;# 
   607  001F                     	;# 
   608  0081                     	;# 
   609  0085                     	;# 
   610  0086                     	;# 
   611  0087                     	;# 
   612  008C                     	;# 
   613  008D                     	;# 
   614  008E                     	;# 
   615  008F                     	;# 
   616  0090                     	;# 
   617  0092                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0093                     	;# 
   621  0094                     	;# 
   622  0095                     	;# 
   623  0095                     	;# 
   624  0096                     	;# 
   625  0096                     	;# 
   626  0097                     	;# 
   627  0098                     	;# 
   628  0099                     	;# 
   629  009A                     	;# 
   630  009B                     	;# 
   631  009E                     	;# 
   632  009F                     	;# 
   633  010C                     	;# 
   634  010C                     	;# 
   635  010D                     	;# 
   636  010E                     	;# 
   637  010F                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0118                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011B                     	;# 
   644  011E                     	;# 
   645  011F                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  000A                     	;# 
   659  000B                     	;# 
   660  000C                     	;# 
   661  000D                     	;# 
   662  000E                     	;# 
   663  000E                     	;# 
   664  000F                     	;# 
   665  0010                     	;# 
   666  0011                     	;# 
   667  0012                     	;# 
   668  0013                     	;# 
   669  0014                     	;# 
   670  0015                     	;# 
   671  0015                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  0081                     	;# 
   682  0085                     	;# 
   683  0086                     	;# 
   684  0087                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  008F                     	;# 
   689  0090                     	;# 
   690  0092                     	;# 
   691  0093                     	;# 
   692  0093                     	;# 
   693  0093                     	;# 
   694  0094                     	;# 
   695  0095                     	;# 
   696  0095                     	;# 
   697  0096                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009E                     	;# 
   705  009F                     	;# 
   706  010C                     	;# 
   707  010C                     	;# 
   708  010D                     	;# 
   709  010E                     	;# 
   710  010F                     	;# 
   711  0115                     	;# 
   712  0116                     	;# 
   713  0118                     	;# 
   714  0119                     	;# 
   715  011A                     	;# 
   716  011B                     	;# 
   717  011E                     	;# 
   718  011F                     	;# 
   719  018C                     	;# 
   720  018D                     	;# 
   721  019D                     	;# 
   722  019E                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  000E                     	;# 
   736  000E                     	;# 
   737  000F                     	;# 
   738  0010                     	;# 
   739  0011                     	;# 
   740  0012                     	;# 
   741  0013                     	;# 
   742  0014                     	;# 
   743  0015                     	;# 
   744  0015                     	;# 
   745  0016                     	;# 
   746  0017                     	;# 
   747  0018                     	;# 
   748  0019                     	;# 
   749  001A                     	;# 
   750  001C                     	;# 
   751  001D                     	;# 
   752  001E                     	;# 
   753  001F                     	;# 
   754  0081                     	;# 
   755  0085                     	;# 
   756  0086                     	;# 
   757  0087                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0094                     	;# 
   768  0095                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0096                     	;# 
   772  0097                     	;# 
   773  0098                     	;# 
   774  0099                     	;# 
   775  009A                     	;# 
   776  009B                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  010C                     	;# 
   780  010C                     	;# 
   781  010D                     	;# 
   782  010E                     	;# 
   783  010F                     	;# 
   784  0115                     	;# 
   785  0116                     	;# 
   786  0118                     	;# 
   787  0119                     	;# 
   788  011A                     	;# 
   789  011B                     	;# 
   790  011E                     	;# 
   791  011F                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  019D                     	;# 
   795  019E                     	;# 
   796                           
   797                           	psect	idataBANK0
   798  03C8                     __pidataBANK0:	
   799                           
   800                           ;initializer for _current_state_b
   801  03C8  3401               	retlw	1
   802                           
   803                           ;initializer for _current_state
   804  03C9  3401               	retlw	1
   805                           
   806                           	psect	idataBANK1
   807  033F                     __pidataBANK1:	
   808                           
   809                           ;initializer for main@F1554
   810  033F  3420               	retlw	32
   811  0340  3431               	retlw	49
   812  0341  3430               	retlw	48
   813  0342  3430               	retlw	48
   814  0343  3420               	retlw	32
   815  0344  3473               	retlw	115
   816  0345  3474               	retlw	116
   817  0346  3465               	retlw	101
   818  0347  3470               	retlw	112
   819  0348  3420               	retlw	32
   820  0349  3476               	retlw	118
   821  034A  346F               	retlw	111
   822  034B  346C               	retlw	108
   823  034C  3475               	retlw	117
   824  034D  346D               	retlw	109
   825  034E  3465               	retlw	101
   826  034F  3420               	retlw	32
   827  0350  3463               	retlw	99
   828  0351  346F               	retlw	111
   829  0352  346E               	retlw	110
   830  0353  3474               	retlw	116
   831  0354  3472               	retlw	114
   832  0355  346F               	retlw	111
   833  0356  346C               	retlw	108
   834  0357  3420               	retlw	32
   835  0358  3464               	retlw	100
   836  0359  3465               	retlw	101
   837  035A  346D               	retlw	109
   838  035B  346F               	retlw	111
   839  035C  340A               	retlw	10
   840  035D  3400               	retlw	0
   841                           
   842                           	psect	strings
   843  0275                     __pstrings:	
   844  0275                     stringtab:	
   845  0275                     __stringtab:	
   846  0275                     stringcode:	
   847                           ;	String table - string pointers are 1 byte each
   848                           
   849  0275                     stringdir:	
   850  0275  3002               	movlw	high stringdir
   851  0276  008A               	movwf	10
   852  0277  0804               	movf	4,w
   853  0278  0A84               	incf	4,f
   854  0279  0782               	addwf	2,f
   855  027A                     __stringbase:	
   856  027A  3400               	retlw	0
   857  027B                     __end_of__stringtab:	
   858  027B                     _dpowers:	
   859  027B  3401               	retlw	1
   860  027C  3400               	retlw	0
   861  027D  340A               	retlw	10
   862  027E  3400               	retlw	0
   863  027F  3464               	retlw	100
   864  0280  3400               	retlw	0
   865  0281  34E8               	retlw	232
   866  0282  3403               	retlw	3
   867  0283  3410               	retlw	16
   868  0284  3427               	retlw	39
   869  0285                     __end_of_dpowers:	
   870  0005                     _PORTAbits	set	5
   871  0018                     _RCSTAbits	set	24
   872  0019                     _TXREG	set	25
   873  000B                     _INTCONbits	set	11
   874  0007                     _PORTCbits	set	7
   875  0064                     _TXIF	set	100
   876  0099                     _SPBRG	set	153
   877  0098                     _TXSTAbits	set	152
   878  0086                     _TRISBbits	set	134
   879  0081                     _OPTION_REGbits	set	129
   880  0085                     _TRISAbits	set	133
   881  0087                     _TRISCbits	set	135
   882  04C1                     _TRMT	set	1217
   883  011A                     _CM2CON0	set	282
   884  0119                     _CM1CON0	set	281
   885  011F                     _ANSELH	set	287
   886  011E                     _ANSEL	set	286
   887  0285                     STR_2:	
   888  0285  3476               	retlw	118	;'v'
   889  0286  346F               	retlw	111	;'o'
   890  0287  346C               	retlw	108	;'l'
   891  0288  3475               	retlw	117	;'u'
   892  0289  346D               	retlw	109	;'m'
   893  028A  3465               	retlw	101	;'e'
   894  028B  3420               	retlw	32	;' '
   895  028C  3470               	retlw	112	;'p'
   896  028D  346F               	retlw	111	;'o'
   897  028E  3473               	retlw	115	;'s'
   898  028F  3469               	retlw	105	;'i'
   899  0290  3474               	retlw	116	;'t'
   900  0291  3469               	retlw	105	;'i'
   901  0292  346F               	retlw	111	;'o'
   902  0293  346E               	retlw	110	;'n'
   903  0294  3420               	retlw	32	;' '
   904  0295  343D               	retlw	61	;'='
   905  0296  3420               	retlw	32	;' '
   906  0297  3425               	retlw	37	;'%'
   907  0298  3464               	retlw	100	;'d'
   908  0299  340A               	retlw	10
   909  029A  3400               	retlw	0
   910  029B                     STR_1:	
   911  029B  3461               	retlw	97	;'a'
   912  029C  3475               	retlw	117	;'u'
   913  029D  3464               	retlw	100	;'d'
   914  029E  3469               	retlw	105	;'i'
   915  029F  346F               	retlw	111	;'o'
   916  02A0  345F               	retlw	95	;'_'
   917  02A1  3470               	retlw	112	;'p'
   918  02A2  3472               	retlw	114	;'r'
   919  02A3  346F               	retlw	111	;'o'
   920  02A4  346A               	retlw	106	;'j'
   921  02A5  3465               	retlw	101	;'e'
   922  02A6  3463               	retlw	99	;'c'
   923  02A7  3474               	retlw	116	;'t'
   924  02A8  340A               	retlw	10
   925  02A9  3400               	retlw	0
   926                           
   927                           ; #config settings
   928  0000                     
   929                           	psect	cinit
   930  0013                     start_initialization:	
   931  0013                     __initialization:	
   932                           
   933                           ; Initialize objects allocated to BANK1
   934  0013  1383               	bcf	3,7	;select IRP bank0
   935  0014  30BF               	movlw	low (__pdataBANK1+31)
   936  0015  00FD               	movwf	btemp+-1
   937  0016  3003               	movlw	high __pidataBANK1
   938  0017  00FE               	movwf	btemp
   939  0018  303F               	movlw	low __pidataBANK1
   940  0019  00FF               	movwf	btemp+1
   941  001A  30A0               	movlw	low __pdataBANK1
   942  001B  0084               	movwf	4
   943  001C  118A  23A6  118A   	fcall	init_ram0
   944                           
   945                           ; Initialize objects allocated to BANK0
   946  001F  118A  23C8  118A   	fcall	__pidataBANK0	;fetch initializer
   947  0022  00D4               	movwf	__pdataBANK0& (0+127)
   948  0023  118A  23C9         	fcall	__pidataBANK0+1	;fetch initializer
   949  0025  00D5               	movwf	(__pdataBANK0+1)& (0+127)
   950                           
   951                           ; Clear objects allocated to BANK0
   952  0026  01CC               	clrf	__pbssBANK0& (0+127)
   953  0027  01CD               	clrf	(__pbssBANK0+1)& (0+127)
   954  0028  01CE               	clrf	(__pbssBANK0+2)& (0+127)
   955  0029  01CF               	clrf	(__pbssBANK0+3)& (0+127)
   956  002A  01D0               	clrf	(__pbssBANK0+4)& (0+127)
   957  002B  01D1               	clrf	(__pbssBANK0+5)& (0+127)
   958  002C  01D2               	clrf	(__pbssBANK0+6)& (0+127)
   959  002D  01D3               	clrf	(__pbssBANK0+7)& (0+127)
   960  002E                     end_of_initialization:	
   961                           ;End of C runtime variable initialization code
   962                           
   963  002E                     __end_of__initialization:	
   964  002E  0183               	clrf	3
   965  002F  118A  2B10         	ljmp	_main	;jump to C main() function
   966                           
   967                           	psect	bssBANK0
   968  004C                     __pbssBANK0:	
   969  004C                     _previous_count:	
   970  004C                     	ds	2
   971  004E                     _count:	
   972  004E                     	ds	2
   973  0050                     _b_de:	
   974  0050                     	ds	1
   975  0051                     _a_de:	
   976  0051                     	ds	1
   977  0052                     _b_status:	
   978  0052                     	ds	1
   979  0053                     _a_status:	
   980  0053                     	ds	1
   981                           
   982                           	psect	dataBANK0
   983  0054                     __pdataBANK0:	
   984  0054                     _current_state_b:	
   985  0054                     	ds	1
   986  0055                     _current_state:	
   987  0055                     	ds	1
   988                           
   989                           	psect	dataBANK1
   990  00A0                     __pdataBANK1:	
   991  00A0                     main@F1554:	
   992  00A0                     	ds	31
   993                           
   994                           	psect	inittext
   995  03A2                     init_fetch0:	
   996                           ;	Called with low address in FSR and high address in W
   997                           
   998  03A2  087E               	movf	126,w
   999  03A3  008A               	movwf	10
  1000  03A4  087F               	movf	127,w
  1001  03A5  0082               	movwf	2
  1002  03A6                     init_ram0:	
  1003                           ;Called with:
  1004                           ;	high address of idata address in btemp 
  1005                           ;	low address of idata address in btemp+1 
  1006                           ;	low address of data in FSR
  1007                           ;	high address + 1 of data in btemp-1
  1008                           
  1009  03A6  23A2  118A         	fcall	init_fetch0
  1010  03A8  0080               	movwf	0
  1011  03A9  0A84               	incf	4,f
  1012  03AA  0804               	movf	4,w
  1013  03AB  067D               	xorwf	125,w
  1014  03AC  1903               	btfsc	3,2
  1015  03AD  3400               	retlw	0
  1016  03AE  0AFF               	incf	127,f
  1017  03AF  1903               	btfsc	3,2
  1018  03B0  0AFE               	incf	126,f
  1019  03B1  2BA6               	goto	init_ram0
  1020                           
  1021                           	psect	cstackBANK1
  1022  00BF                     __pcstackBANK1:	
  1023  00BF                     main@ton:	
  1024                           
  1025                           ; 31 bytes @ 0x0
  1026  00BF                     	ds	31
  1027                           
  1028                           	psect	cstackCOMMON
  1029  0070                     __pcstackCOMMON:	
  1030  0070                     ?_init_ports:	
  1031  0070                     ?_set_usart:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0070                     ?_transmit_character:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ?_ioc_enable:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ?_main:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?_putch:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     ?_isr:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0070                     ?i1_putch:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ??i1_putch:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ?_printf:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?i1___lwdiv:	
  1059                           ; 2 bytes @ 0x0
  1060                           
  1061  0070                     i1putch@byte:	
  1062                           ; 2 bytes @ 0x0
  1063                           
  1064  0070                     i1___lwdiv@divisor:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x0
  1069  0070                     	ds	2
  1070  0072                     i1___lwdiv@dividend:	
  1071                           
  1072                           ; 2 bytes @ 0x2
  1073  0072                     	ds	2
  1074  0074                     ??i1___lwdiv:	
  1075                           
  1076                           ; 1 bytes @ 0x4
  1077  0074                     	ds	1
  1078  0075                     i1___lwdiv@quotient:	
  1079                           
  1080                           ; 2 bytes @ 0x5
  1081  0075                     	ds	2
  1082  0077                     i1___lwdiv@counter:	
  1083                           
  1084                           ; 1 bytes @ 0x7
  1085  0077                     	ds	1
  1086  0078                     ?i1___lwmod:	
  1087  0078                     i1___lwmod@divisor:	
  1088                           ; 2 bytes @ 0x8
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x8
  1092  0078                     	ds	2
  1093  007A                     i1___lwmod@dividend:	
  1094                           
  1095                           ; 2 bytes @ 0xA
  1096  007A                     	ds	2
  1097  007C                     ??i1___lwmod:	
  1098                           
  1099                           ; 1 bytes @ 0xC
  1100  007C                     	ds	1
  1101  007D                     i1___lwmod@counter:	
  1102                           
  1103                           ; 1 bytes @ 0xD
  1104  007D                     	ds	1
  1105                           
  1106                           	psect	cstackBANK0
  1107  0020                     __pcstackBANK0:	
  1108  0020                     ?i1_printf:	
  1109                           
  1110                           ; 2 bytes @ 0x0
  1111  0020                     	ds	2
  1112  0022                     ??i1_printf:	
  1113                           
  1114                           ; 1 bytes @ 0x2
  1115  0022                     	ds	3
  1116  0025                     i1printf@f:	
  1117                           
  1118                           ; 1 bytes @ 0x5
  1119  0025                     	ds	1
  1120  0026                     i1printf@ap:	
  1121                           
  1122                           ; 1 bytes @ 0x6
  1123  0026                     	ds	1
  1124  0027                     i1printf@flag:	
  1125                           
  1126                           ; 1 bytes @ 0x7
  1127  0027                     	ds	1
  1128  0028                     i1printf@prec:	
  1129                           
  1130                           ; 1 bytes @ 0x8
  1131  0028                     	ds	1
  1132  0029                     i1printf@val:	
  1133                           
  1134                           ; 2 bytes @ 0x9
  1135  0029                     	ds	2
  1136  002B                     i1printf@c:	
  1137                           
  1138                           ; 1 bytes @ 0xB
  1139  002B                     	ds	1
  1140  002C                     ??_isr:	
  1141                           
  1142                           ; 1 bytes @ 0xC
  1143  002C                     	ds	4
  1144  0030                     ??_init_ports:	
  1145  0030                     ??_set_usart:	
  1146                           ; 1 bytes @ 0x10
  1147                           
  1148  0030                     ??_transmit_character:	
  1149                           ; 1 bytes @ 0x10
  1150                           
  1151  0030                     ??_ioc_enable:	
  1152                           ; 1 bytes @ 0x10
  1153                           
  1154  0030                     ??_putch:	
  1155                           ; 1 bytes @ 0x10
  1156                           
  1157  0030                     ?___lwdiv:	
  1158                           ; 1 bytes @ 0x10
  1159                           
  1160  0030                     putch@byte:	
  1161                           ; 2 bytes @ 0x10
  1162                           
  1163  0030                     ___lwdiv@divisor:	
  1164                           ; 1 bytes @ 0x10
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x10
  1168  0030                     	ds	1
  1169  0031                     transmit_character@character:	
  1170                           
  1171                           ; 1 bytes @ 0x11
  1172  0031                     	ds	1
  1173  0032                     ___lwdiv@dividend:	
  1174                           
  1175                           ; 2 bytes @ 0x12
  1176  0032                     	ds	2
  1177  0034                     ??___lwdiv:	
  1178                           
  1179                           ; 1 bytes @ 0x14
  1180  0034                     	ds	1
  1181  0035                     ___lwdiv@quotient:	
  1182                           
  1183                           ; 2 bytes @ 0x15
  1184  0035                     	ds	2
  1185  0037                     ___lwdiv@counter:	
  1186                           
  1187                           ; 1 bytes @ 0x17
  1188  0037                     	ds	1
  1189  0038                     ?___lwmod:	
  1190  0038                     ___lwmod@divisor:	
  1191                           ; 2 bytes @ 0x18
  1192                           
  1193                           
  1194                           ; 2 bytes @ 0x18
  1195  0038                     	ds	2
  1196  003A                     ___lwmod@dividend:	
  1197                           
  1198                           ; 2 bytes @ 0x1A
  1199  003A                     	ds	2
  1200  003C                     ??___lwmod:	
  1201                           
  1202                           ; 1 bytes @ 0x1C
  1203  003C                     	ds	1
  1204  003D                     ___lwmod@counter:	
  1205                           
  1206                           ; 1 bytes @ 0x1D
  1207  003D                     	ds	1
  1208  003E                     ??_printf:	
  1209                           
  1210                           ; 1 bytes @ 0x1E
  1211  003E                     	ds	3
  1212  0041                     printf@ap:	
  1213                           
  1214                           ; 1 bytes @ 0x21
  1215  0041                     	ds	1
  1216  0042                     printf@flag:	
  1217                           
  1218                           ; 1 bytes @ 0x22
  1219  0042                     	ds	1
  1220  0043                     printf@prec:	
  1221                           
  1222                           ; 1 bytes @ 0x23
  1223  0043                     	ds	1
  1224  0044                     printf@f:	
  1225                           
  1226                           ; 1 bytes @ 0x24
  1227  0044                     	ds	1
  1228  0045                     printf@val:	
  1229                           
  1230                           ; 2 bytes @ 0x25
  1231  0045                     	ds	2
  1232  0047                     printf@c:	
  1233                           
  1234                           ; 1 bytes @ 0x27
  1235  0047                     	ds	1
  1236  0048                     ??_main:	
  1237                           
  1238                           ; 1 bytes @ 0x28
  1239  0048                     	ds	4
  1240                           
  1241                           	psect	maintext
  1242  0310                     __pmaintext:	
  1243 ;;
  1244 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1245 ;;
  1246 ;; *************** function _main *****************
  1247 ;; Defined at:
  1248 ;;		line 22 in file "main.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  ton            31    0[BANK1 ] unsigned char [31]
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : B00/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1262 ;;      Params:         0       0       0       0
  1263 ;;      Locals:         0       0      31       0
  1264 ;;      Temps:          0       4       0       0
  1265 ;;      Totals:         0       4      31       0
  1266 ;;Total ram usage:       35 bytes
  1267 ;; Hardware stack levels required when called:    5
  1268 ;; This function calls:
  1269 ;;		_init_ports
  1270 ;;		_ioc_enable
  1271 ;;		_printf
  1272 ;;		_set_usart
  1273 ;;		_transmit_character
  1274 ;; This function is called by:
  1275 ;;		Startup code after reset
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function _main
  1281  0310                     _main:	
  1282                           
  1283                           ;main.c: 24: init_ports();
  1284                           
  1285                           ;incstack = 0
  1286                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1287  0310  118A  238F  118A   	fcall	_init_ports
  1288                           
  1289                           ;main.c: 25: set_usart();
  1290  0313  118A  237C  118A   	fcall	_set_usart
  1291                           
  1292                           ;main.c: 26: char ton[] = " 100 step volume control demo\n";
  1293  0316  30BF               	movlw	main@ton& (0+255)
  1294  0317  0084               	movwf	4
  1295  0318  30A0               	movlw	low main@F1554
  1296  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1297  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1298  031B  00C8               	movwf	??_main
  1299  031C  0804               	movf	4,w
  1300  031D  00C9               	movwf	??_main+1
  1301  031E  301F               	movlw	31
  1302  031F  00CA               	movwf	??_main+2
  1303  0320                     u1360:	
  1304  0320  0848               	movf	??_main,w
  1305  0321  0084               	movwf	4
  1306  0322  1383               	bcf	3,7	;select IRP bank1
  1307  0323  0800               	movf	0,w
  1308  0324  00CB               	movwf	??_main+3
  1309  0325  0AC8               	incf	??_main,f
  1310  0326  0849               	movf	??_main+1,w
  1311  0327  0084               	movwf	4
  1312  0328  084B               	movf	??_main+3,w
  1313  0329  0080               	movwf	0
  1314  032A  0AC9               	incf	??_main+1,f
  1315  032B  0BCA               	decfsz	??_main+2,f
  1316  032C  2B20               	goto	u1360
  1317                           
  1318                           ;main.c: 27: transmit_character(&ton[0]);
  1319  032D  30BF               	movlw	(low (main@ton| 0))& (0+255)
  1320  032E  118A  235E  118A   	fcall	_transmit_character
  1321                           
  1322                           ;main.c: 28: printf( "audio_project\n");
  1323  0331  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1324  0332  118A  2031  118A   	fcall	_printf
  1325                           
  1326                           ;main.c: 29: count = 0;
  1327  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0337  01CE               	clrf	_count	;volatile
  1330  0338  01CF               	clrf	_count+1	;volatile
  1331                           
  1332                           ;main.c: 30: previous_count = 0;
  1333  0339  01CC               	clrf	_previous_count	;volatile
  1334  033A  01CD               	clrf	_previous_count+1	;volatile
  1335                           
  1336                           ;main.c: 31: ioc_enable();
  1337  033B  118A  23C2  118A   	fcall	_ioc_enable
  1338  033E                     l25:	
  1339                           ;main.c: 34: while(1)
  1340                           
  1341                           
  1342                           ;main.c: 35: {
  1343  033E  2B3E               	goto	l25
  1344  033F                     __end_of_main:	
  1345                           
  1346                           	psect	text1
  1347  035E                     __ptext1:	
  1348 ;; *************** function _transmit_character *****************
  1349 ;; Defined at:
  1350 ;;		line 15 in file "transmit_character.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  character       1    wreg     PTR unsigned char 
  1353 ;;		 -> main@ton(31), 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  character       1   17[BANK0 ] PTR unsigned char 
  1356 ;;		 -> main@ton(31), 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1366 ;;      Params:         0       0       0       0
  1367 ;;      Locals:         0       1       0       0
  1368 ;;      Temps:          0       1       0       0
  1369 ;;      Totals:         0       2       0       0
  1370 ;;Total ram usage:        2 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    3
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _transmit_character
  1382  035E                     _transmit_character:	
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _transmit_character: [wreg-fsr0h+status,2+status,0]
  1386                           ;transmit_character@character stored from wreg
  1387  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1388  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0360  00B1               	movwf	transmit_character@character
  1390  0361                     l1330:	
  1391                           ;transmit_character.c: 18: while(*character !='\0')
  1392                           
  1393  0361  0831               	movf	transmit_character@character,w
  1394  0362  0084               	movwf	4
  1395  0363  1383               	bcf	3,7	;select IRP bank0
  1396  0364  0800               	movf	0,w
  1397  0365  1903               	btfsc	3,2
  1398  0366  0008               	return
  1399  0367                     l130:	
  1400                           ;transmit_character.c: 21: {
  1401                           ;transmit_character.c: 22: ;
  1402                           
  1403                           ;transmit_character.c: 19: {
  1404                           ;transmit_character.c: 20: while (TRMT == 0)
  1405                           
  1406  0367  1683               	bsf	3,5	;RP0=1, select bank1
  1407  0368  1303               	bcf	3,6	;RP1=0, select bank1
  1408  0369  1C98               	btfss	24,1	;volatile
  1409  036A  2B67               	goto	l130
  1410                           
  1411                           ;transmit_character.c: 23: }
  1412                           ;transmit_character.c: 25: TXREG = *character;
  1413  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1414  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1415  036D  0831               	movf	transmit_character@character,w
  1416  036E  0084               	movwf	4
  1417  036F  1383               	bcf	3,7	;select IRP bank0
  1418  0370  0800               	movf	0,w
  1419  0371  0099               	movwf	25	;volatile
  1420                           
  1421                           ;transmit_character.c: 26: if(*character !='\0')
  1422  0372  0831               	movf	transmit_character@character,w
  1423  0373  0084               	movwf	4
  1424  0374  0800               	movf	0,w
  1425  0375  1903               	btfsc	3,2
  1426  0376  2B61               	goto	l1330
  1427                           
  1428                           ;transmit_character.c: 27: {
  1429                           ;transmit_character.c: 28: character++;
  1430  0377  3001               	movlw	1
  1431  0378  00B0               	movwf	??_transmit_character
  1432  0379  0830               	movf	??_transmit_character,w
  1433  037A  07B1               	addwf	transmit_character@character,f
  1434  037B  2B61               	goto	l1330
  1435  037C                     __end_of_transmit_character:	
  1436                           
  1437                           	psect	text2
  1438  037C                     __ptext2:	
  1439 ;; *************** function _set_usart *****************
  1440 ;; Defined at:
  1441 ;;		line 12 in file "set_usart.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1455 ;;      Params:         0       0       0       0
  1456 ;;      Locals:         0       0       0       0
  1457 ;;      Temps:          0       0       0       0
  1458 ;;      Totals:         0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    3
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _set_usart
  1471  037C                     _set_usart:	
  1472                           
  1473                           ;set_usart.c: 14: ANSEL = 0x00;
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _set_usart: [wreg+status,2]
  1477  037C  1283               	bcf	3,5	;RP0=0, select bank2
  1478  037D  1703               	bsf	3,6	;RP1=1, select bank2
  1479  037E  019E               	clrf	30	;volatile
  1480                           
  1481                           ;set_usart.c: 15: ANSELH = 0x00;
  1482  037F  019F               	clrf	31	;volatile
  1483                           
  1484                           ;set_usart.c: 16: CM1CON0 = 0x00;
  1485  0380  0199               	clrf	25	;volatile
  1486                           
  1487                           ;set_usart.c: 17: CM2CON0 = 0x00;
  1488  0381  019A               	clrf	26	;volatile
  1489                           
  1490                           ;set_usart.c: 18: TRISBbits.TRISB7 = 0;
  1491  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1492  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1493  0384  1386               	bcf	6,7	;volatile
  1494                           
  1495                           ;set_usart.c: 19: TXSTAbits.TXEN = 1;
  1496  0385  1698               	bsf	24,5	;volatile
  1497                           
  1498                           ;set_usart.c: 20: TXSTAbits.SYNC = 0;
  1499  0386  1218               	bcf	24,4	;volatile
  1500                           
  1501                           ;set_usart.c: 21: RCSTAbits.SPEN = 1;
  1502  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0389  1798               	bsf	24,7	;volatile
  1505                           
  1506                           ;set_usart.c: 22: SPBRG = 0x19;
  1507  038A  3019               	movlw	25
  1508  038B  1683               	bsf	3,5	;RP0=1, select bank1
  1509  038C  1303               	bcf	3,6	;RP1=0, select bank1
  1510  038D  0099               	movwf	25	;volatile
  1511  038E  0008               	return
  1512  038F                     __end_of_set_usart:	
  1513                           
  1514                           	psect	text3
  1515  0031                     __ptext3:	
  1516 ;; *************** function _printf *****************
  1517 ;; Defined at:
  1518 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  f               1    wreg     PTR const unsigned char 
  1521 ;;		 -> STR_2(22), STR_1(15), 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  f               1   36[BANK0 ] PTR const unsigned char 
  1524 ;;		 -> STR_2(22), STR_1(15), 
  1525 ;;  tmpval          4    0        struct .
  1526 ;;  val             2   37[BANK0 ] unsigned int 
  1527 ;;  cp              2    0        PTR const unsigned char 
  1528 ;;  len             2    0        unsigned int 
  1529 ;;  c               1   39[BANK0 ] char 
  1530 ;;  prec            1   35[BANK0 ] char 
  1531 ;;  flag            1   34[BANK0 ] unsigned char 
  1532 ;;  ap              1   33[BANK0 ] PTR void [1]
  1533 ;;		 -> ?i1_printf(2), ?_printf(2), 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2    8[None  ] int 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1543 ;;      Params:         0       0       0       0
  1544 ;;      Locals:         0       7       0       0
  1545 ;;      Temps:          0       3       0       0
  1546 ;;      Totals:         0      10       0       0
  1547 ;;Total ram usage:       10 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    4
  1550 ;; This function calls:
  1551 ;;		___lwdiv
  1552 ;;		___lwmod
  1553 ;;		_putch
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _printf
  1561  0031                     _printf:	
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1565                           ;printf@f stored from wreg
  1566  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0033  00C4               	movwf	printf@f
  1569                           
  1570                           ;doprnt.c: 466: va_list ap;
  1571                           ;doprnt.c: 499: signed char c;
  1572                           ;doprnt.c: 506: signed char prec;
  1573                           ;doprnt.c: 508: unsigned char flag;
  1574                           ;doprnt.c: 523: union {
  1575                           ;doprnt.c: 524: unsigned long vd;
  1576                           ;doprnt.c: 525: double integ;
  1577                           ;doprnt.c: 526: } tmpval;
  1578                           ;doprnt.c: 528: unsigned int val;
  1579                           ;doprnt.c: 529: unsigned len;
  1580                           ;doprnt.c: 530: const char * cp;
  1581                           ;doprnt.c: 533: *ap = __va_start();
  1582  0034  3070               	movlw	(low (?_printf| 0))& (0+255)
  1583  0035  00BE               	movwf	??_printf
  1584  0036  083E               	movf	??_printf,w
  1585  0037  00C1               	movwf	printf@ap
  1586  0038                     l1378:	
  1587                           ;doprnt.c: 536: while(c = *f++) {
  1588                           
  1589  0038  3001               	movlw	1
  1590  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1591  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1592  003B  07C4               	addwf	printf@f,f
  1593  003C  30FF               	movlw	-1
  1594  003D  0744               	addwf	printf@f,w
  1595  003E  0084               	movwf	4
  1596  003F  118A  2275  118A   	fcall	stringdir
  1597  0042  00BE               	movwf	??_printf
  1598  0043  083E               	movf	??_printf,w
  1599  0044  00C7               	movwf	printf@c
  1600  0045  0847               	movf	printf@c,w
  1601  0046  1903               	btfsc	3,2
  1602  0047  0008               	return
  1603                           
  1604                           ;doprnt.c: 538: if(c != '%')
  1605  0048  3025               	movlw	37
  1606  0049  0647               	xorwf	printf@c,w
  1607  004A  1903               	btfsc	3,2
  1608  004B  2851               	goto	l1338
  1609                           
  1610                           ;doprnt.c: 540: {
  1611                           ;doprnt.c: 541: (putch(c) );
  1612  004C  0847               	movf	printf@c,w
  1613  004D  118A  23B2  118A   	fcall	_putch
  1614                           
  1615                           ;doprnt.c: 542: continue;
  1616  0050  2838               	goto	l1378
  1617  0051                     l1338:	
  1618                           
  1619                           ;doprnt.c: 543: }
  1620                           ;doprnt.c: 548: flag = 0;
  1621  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0053  01C2               	clrf	printf@flag
  1624                           
  1625                           ;doprnt.c: 822: }
  1626                           
  1627                           ;doprnt.c: 813: continue;
  1628                           
  1629                           ;doprnt.c: 802: default:
  1630                           
  1631                           ;doprnt.c: 698: case 'i':
  1632                           ;doprnt.c: 699: break;
  1633                           
  1634                           ;doprnt.c: 697: case 'd':
  1635                           
  1636                           ;doprnt.c: 638: goto alldone;
  1637                           
  1638                           ;doprnt.c: 637: case 0:
  1639                           
  1640                           ;doprnt.c: 635: switch(c = *f++) {
  1641  0054  3001               	movlw	1
  1642  0055  07C4               	addwf	printf@f,f
  1643  0056  30FF               	movlw	-1
  1644  0057  0744               	addwf	printf@f,w
  1645  0058  0084               	movwf	4
  1646  0059  118A  2275  118A   	fcall	stringdir
  1647  005C  00C7               	movwf	printf@c
  1648                           
  1649                           ; Switch size 1, requested type "space"
  1650                           ; Number of cases is 3, Range of values is 0 to 105
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte           10     6 (average)
  1654                           ; direct_byte          219     7 (fixed)
  1655                           ; jumptable            260     6 (fixed)
  1656                           ;	Chosen strategy is simple_byte
  1657  005D  3A00               	xorlw	0	; case 0
  1658  005E  1903               	skipnz
  1659  005F  28E5               	goto	l268
  1660  0060  3A64               	xorlw	100	; case 100
  1661  0061  1903               	skipnz
  1662  0062  2867               	goto	l1344
  1663  0063  3A0D               	xorlw	13	; case 105
  1664  0064  1903               	skipnz
  1665  0065  2867               	goto	l1344
  1666  0066  2838               	goto	l1378
  1667  0067                     l1344:	
  1668                           
  1669                           ;doprnt.c: 1253: {
  1670                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1671  0067  0841               	movf	printf@ap,w
  1672  0068  0084               	movwf	4
  1673  0069  1383               	bcf	3,7	;select IRP bank0
  1674  006A  0800               	movf	0,w
  1675  006B  00C5               	movwf	printf@val
  1676  006C  0A84               	incf	4,f
  1677  006D  0800               	movf	0,w
  1678  006E  00C6               	movwf	printf@val+1
  1679  006F  3002               	movlw	2
  1680  0070  00BE               	movwf	??_printf
  1681  0071  083E               	movf	??_printf,w
  1682  0072  07C1               	addwf	printf@ap,f
  1683                           
  1684                           ;doprnt.c: 1261: if((int)val < 0) {
  1685  0073  1FC6               	btfss	printf@val+1,7
  1686  0074  287E               	goto	l1354
  1687                           
  1688                           ;doprnt.c: 1262: flag |= 0x03;
  1689  0075  3003               	movlw	3
  1690  0076  00BE               	movwf	??_printf
  1691  0077  083E               	movf	??_printf,w
  1692  0078  04C2               	iorwf	printf@flag,f
  1693                           
  1694                           ;doprnt.c: 1263: val = -val;
  1695  0079  09C5               	comf	printf@val,f
  1696  007A  09C6               	comf	printf@val+1,f
  1697  007B  0AC5               	incf	printf@val,f
  1698  007C  1903               	skipnz
  1699  007D  0AC6               	incf	printf@val+1,f
  1700  007E                     l1354:	
  1701                           
  1702                           ;doprnt.c: 1264: }
  1703                           ;doprnt.c: 1266: }
  1704                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1705  007E  01C7               	clrf	printf@c
  1706  007F  0AC7               	incf	printf@c,f
  1707  0080  3005               	movlw	5
  1708  0081  0647               	xorwf	printf@c,w
  1709  0082  1903               	btfsc	3,2
  1710  0083  28A1               	goto	l1366
  1711  0084                     l1360:	
  1712                           
  1713                           ;doprnt.c: 1306: if(val < dpowers[c])
  1714  0084  0847               	movf	printf@c,w
  1715  0085  00BE               	movwf	??_printf
  1716  0086  073E               	addwf	??_printf,w
  1717  0087  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1718  0088  0084               	movwf	4
  1719  0089  118A  2275  118A   	fcall	stringdir
  1720  008C  00BF               	movwf	??_printf+1
  1721  008D  118A  2275  118A   	fcall	stringdir
  1722  0090  00C0               	movwf	??_printf+2
  1723  0091  0840               	movf	??_printf+2,w
  1724  0092  0246               	subwf	printf@val+1,w
  1725  0093  1D03               	skipz
  1726  0094  2897               	goto	u1235
  1727  0095  083F               	movf	??_printf+1,w
  1728  0096  0245               	subwf	printf@val,w
  1729  0097                     u1235:	
  1730  0097  1C03               	btfss	3,0
  1731  0098  28A1               	goto	l1366
  1732                           
  1733                           ;doprnt.c: 1307: break;
  1734  0099  3001               	movlw	1
  1735  009A  00BE               	movwf	??_printf
  1736  009B  083E               	movf	??_printf,w
  1737  009C  07C7               	addwf	printf@c,f
  1738  009D  3005               	movlw	5
  1739  009E  0647               	xorwf	printf@c,w
  1740  009F  1D03               	btfss	3,2
  1741  00A0  2884               	goto	l1360
  1742  00A1                     l1366:	
  1743                           
  1744                           ;doprnt.c: 1422: {
  1745                           ;doprnt.c: 1438: if(flag & 0x03)
  1746  00A1  0842               	movf	printf@flag,w
  1747  00A2  3903               	andlw	3
  1748  00A3  1903               	btfsc	3,2
  1749  00A4  28A9               	goto	l1370
  1750                           
  1751                           ;doprnt.c: 1439: (putch('-') );
  1752  00A5  302D               	movlw	45
  1753  00A6  118A  23B2  118A   	fcall	_putch
  1754  00A9                     l1370:	
  1755                           
  1756                           ;doprnt.c: 1469: }
  1757                           ;doprnt.c: 1472: prec = c;
  1758  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1759  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1760  00AB  0847               	movf	printf@c,w
  1761  00AC  00BE               	movwf	??_printf
  1762  00AD  083E               	movf	??_printf,w
  1763  00AE  00C3               	movwf	printf@prec
  1764  00AF                     l1376:	
  1765                           ;doprnt.c: 1474: while(prec--) {
  1766                           
  1767  00AF  30FF               	movlw	255
  1768  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1769  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1770  00B2  00BE               	movwf	??_printf
  1771  00B3  083E               	movf	??_printf,w
  1772  00B4  07C3               	addwf	printf@prec,f
  1773  00B5  0A43               	incf	printf@prec,w
  1774  00B6  1903               	btfsc	3,2
  1775  00B7  2838               	goto	l1378
  1776                           
  1777                           ;doprnt.c: 1478: {
  1778                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1779  00B8  300A               	movlw	10
  1780  00B9  00B8               	movwf	___lwmod@divisor
  1781  00BA  3000               	movlw	0
  1782  00BB  00B9               	movwf	___lwmod@divisor+1
  1783  00BC  0843               	movf	printf@prec,w
  1784  00BD  00BE               	movwf	??_printf
  1785  00BE  073E               	addwf	??_printf,w
  1786  00BF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1787  00C0  0084               	movwf	4
  1788  00C1  118A  2275  118A   	fcall	stringdir
  1789  00C4  00B0               	movwf	___lwdiv@divisor
  1790  00C5  118A  2275  118A   	fcall	stringdir
  1791  00C8  00B1               	movwf	___lwdiv@divisor+1
  1792  00C9  0846               	movf	printf@val+1,w
  1793  00CA  00B3               	movwf	___lwdiv@dividend+1
  1794  00CB  0845               	movf	printf@val,w
  1795  00CC  00B2               	movwf	___lwdiv@dividend
  1796  00CD  118A  21FB  118A   	fcall	___lwdiv
  1797  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1798  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1799  00D2  0831               	movf	?___lwdiv+1,w
  1800  00D3  00BB               	movwf	___lwmod@dividend+1
  1801  00D4  0830               	movf	?___lwdiv,w
  1802  00D5  00BA               	movwf	___lwmod@dividend
  1803  00D6  118A  22AA  118A   	fcall	___lwmod
  1804  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1805  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1806  00DB  0838               	movf	?___lwmod,w
  1807  00DC  3E30               	addlw	48
  1808  00DD  00BF               	movwf	??_printf+1
  1809  00DE  083F               	movf	??_printf+1,w
  1810  00DF  00C7               	movwf	printf@c
  1811                           
  1812                           ;doprnt.c: 1523: }
  1813                           ;doprnt.c: 1524: (putch(c) );
  1814  00E0  0847               	movf	printf@c,w
  1815  00E1  118A  23B2  118A   	fcall	_putch
  1816  00E4  28AF               	goto	l1376
  1817  00E5                     l268:	
  1818                           ;doprnt.c: 1540: return 0;
  1819                           ;	Return value of _printf is never used
  1820                           
  1821                           ;doprnt.c: 1525: }
  1822                           ;doprnt.c: 1533: }
  1823                           ;doprnt.c: 1535: alldone:
  1824                           
  1825  00E5  0008               	return
  1826  00E6                     __end_of_printf:	
  1827                           
  1828                           	psect	text4
  1829  03B2                     __ptext4:	
  1830 ;; *************** function _putch *****************
  1831 ;; Defined at:
  1832 ;;		line 14 in file "putch.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  byte            1    wreg     unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  byte            1   16[BANK0 ] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1846 ;;      Params:         0       0       0       0
  1847 ;;      Locals:         0       1       0       0
  1848 ;;      Temps:          0       0       0       0
  1849 ;;      Totals:         0       1       0       0
  1850 ;;Total ram usage:        1 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_printf
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _putch
  1862  03B2                     _putch:	
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _putch: [wreg]
  1866                           ;putch@byte stored from wreg
  1867  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1868  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1869  03B4  00B0               	movwf	putch@byte
  1870  03B5                     l83:	
  1871                           ;putch.c: 17: continue;
  1872                           
  1873                           ;putch.c: 16: while( ! TXIF)
  1874                           
  1875  03B5  1E0C               	btfss	12,4	;volatile
  1876  03B6  2BB5               	goto	l83
  1877                           
  1878                           ;putch.c: 18: TXREG = byte;
  1879  03B7  0830               	movf	putch@byte,w
  1880  03B8  0099               	movwf	25	;volatile
  1881  03B9  0008               	return
  1882  03BA                     __end_of_putch:	
  1883                           
  1884                           	psect	text5
  1885  02AA                     __ptext5:	
  1886 ;; *************** function ___lwmod *****************
  1887 ;; Defined at:
  1888 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  divisor         2   24[BANK0 ] unsigned int 
  1891 ;;  dividend        2   26[BANK0 ] unsigned int 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  counter         1   29[BANK0 ] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2   24[BANK0 ] unsigned int 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1903 ;;      Params:         0       4       0       0
  1904 ;;      Locals:         0       1       0       0
  1905 ;;      Temps:          0       1       0       0
  1906 ;;      Totals:         0       6       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    3
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_printf
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function ___lwmod
  1919  02AA                     ___lwmod:	
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1923  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1924  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1925  02AC  0838               	movf	___lwmod@divisor,w
  1926  02AD  0439               	iorwf	___lwmod@divisor+1,w
  1927  02AE  1903               	btfsc	3,2
  1928  02AF  2AD9               	goto	l1236
  1929  02B0  01BD               	clrf	___lwmod@counter
  1930  02B1  0ABD               	incf	___lwmod@counter,f
  1931  02B2                     l1226:	
  1932  02B2  1BB9               	btfsc	___lwmod@divisor+1,7
  1933  02B3  2AC0               	goto	l1228
  1934  02B4  3001               	movlw	1
  1935  02B5                     u985:	
  1936  02B5  1003               	clrc
  1937  02B6  0DB8               	rlf	___lwmod@divisor,f
  1938  02B7  0DB9               	rlf	___lwmod@divisor+1,f
  1939  02B8  3EFF               	addlw	-1
  1940  02B9  1D03               	skipz
  1941  02BA  2AB5               	goto	u985
  1942  02BB  3001               	movlw	1
  1943  02BC  00BC               	movwf	??___lwmod
  1944  02BD  083C               	movf	??___lwmod,w
  1945  02BE  07BD               	addwf	___lwmod@counter,f
  1946  02BF  2AB2               	goto	l1226
  1947  02C0                     l1228:	
  1948  02C0  0839               	movf	___lwmod@divisor+1,w
  1949  02C1  023B               	subwf	___lwmod@dividend+1,w
  1950  02C2  1D03               	skipz
  1951  02C3  2AC6               	goto	u1005
  1952  02C4  0838               	movf	___lwmod@divisor,w
  1953  02C5  023A               	subwf	___lwmod@dividend,w
  1954  02C6                     u1005:	
  1955  02C6  1C03               	skipc
  1956  02C7  2ACE               	goto	l1232
  1957  02C8  0838               	movf	___lwmod@divisor,w
  1958  02C9  02BA               	subwf	___lwmod@dividend,f
  1959  02CA  0839               	movf	___lwmod@divisor+1,w
  1960  02CB  1C03               	skipc
  1961  02CC  03BB               	decf	___lwmod@dividend+1,f
  1962  02CD  02BB               	subwf	___lwmod@dividend+1,f
  1963  02CE                     l1232:	
  1964  02CE  3001               	movlw	1
  1965  02CF                     u1015:	
  1966  02CF  1003               	clrc
  1967  02D0  0CB9               	rrf	___lwmod@divisor+1,f
  1968  02D1  0CB8               	rrf	___lwmod@divisor,f
  1969  02D2  3EFF               	addlw	-1
  1970  02D3  1D03               	skipz
  1971  02D4  2ACF               	goto	u1015
  1972  02D5  3001               	movlw	1
  1973  02D6  02BD               	subwf	___lwmod@counter,f
  1974  02D7  1D03               	btfss	3,2
  1975  02D8  2AC0               	goto	l1228
  1976  02D9                     l1236:	
  1977  02D9  083B               	movf	___lwmod@dividend+1,w
  1978  02DA  00B9               	movwf	?___lwmod+1
  1979  02DB  083A               	movf	___lwmod@dividend,w
  1980  02DC  00B8               	movwf	?___lwmod
  1981  02DD  0008               	return
  1982  02DE                     __end_of___lwmod:	
  1983                           
  1984                           	psect	text6
  1985  01FB                     __ptext6:	
  1986 ;; *************** function ___lwdiv *****************
  1987 ;; Defined at:
  1988 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  divisor         2   16[BANK0 ] unsigned int 
  1991 ;;  dividend        2   18[BANK0 ] unsigned int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  quotient        2   21[BANK0 ] unsigned int 
  1994 ;;  counter         1   23[BANK0 ] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2   16[BANK0 ] unsigned int 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2004 ;;      Params:         0       4       0       0
  2005 ;;      Locals:         0       3       0       0
  2006 ;;      Temps:          0       1       0       0
  2007 ;;      Totals:         0       8       0       0
  2008 ;;Total ram usage:        8 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    3
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_printf
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function ___lwdiv
  2020  01FB                     ___lwdiv:	
  2021                           
  2022                           ;incstack = 0
  2023                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2024  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2025  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2026  01FD  01B5               	clrf	___lwdiv@quotient
  2027  01FE  01B6               	clrf	___lwdiv@quotient+1
  2028  01FF  0830               	movf	___lwdiv@divisor,w
  2029  0200  0431               	iorwf	___lwdiv@divisor+1,w
  2030  0201  1903               	btfsc	3,2
  2031  0202  2A34               	goto	l1214
  2032  0203  01B7               	clrf	___lwdiv@counter
  2033  0204  0AB7               	incf	___lwdiv@counter,f
  2034  0205                     l1202:	
  2035  0205  1BB1               	btfsc	___lwdiv@divisor+1,7
  2036  0206  2A13               	goto	l1204
  2037  0207  3001               	movlw	1
  2038  0208                     u915:	
  2039  0208  1003               	clrc
  2040  0209  0DB0               	rlf	___lwdiv@divisor,f
  2041  020A  0DB1               	rlf	___lwdiv@divisor+1,f
  2042  020B  3EFF               	addlw	-1
  2043  020C  1D03               	skipz
  2044  020D  2A08               	goto	u915
  2045  020E  3001               	movlw	1
  2046  020F  00B4               	movwf	??___lwdiv
  2047  0210  0834               	movf	??___lwdiv,w
  2048  0211  07B7               	addwf	___lwdiv@counter,f
  2049  0212  2A05               	goto	l1202
  2050  0213                     l1204:	
  2051  0213  3001               	movlw	1
  2052  0214                     u935:	
  2053  0214  1003               	clrc
  2054  0215  0DB5               	rlf	___lwdiv@quotient,f
  2055  0216  0DB6               	rlf	___lwdiv@quotient+1,f
  2056  0217  3EFF               	addlw	-1
  2057  0218  1D03               	skipz
  2058  0219  2A14               	goto	u935
  2059  021A  0831               	movf	___lwdiv@divisor+1,w
  2060  021B  0233               	subwf	___lwdiv@dividend+1,w
  2061  021C  1D03               	skipz
  2062  021D  2A20               	goto	u945
  2063  021E  0830               	movf	___lwdiv@divisor,w
  2064  021F  0232               	subwf	___lwdiv@dividend,w
  2065  0220                     u945:	
  2066  0220  1C03               	skipc
  2067  0221  2A29               	goto	l1210
  2068  0222  0830               	movf	___lwdiv@divisor,w
  2069  0223  02B2               	subwf	___lwdiv@dividend,f
  2070  0224  0831               	movf	___lwdiv@divisor+1,w
  2071  0225  1C03               	skipc
  2072  0226  03B3               	decf	___lwdiv@dividend+1,f
  2073  0227  02B3               	subwf	___lwdiv@dividend+1,f
  2074  0228  1435               	bsf	___lwdiv@quotient,0
  2075  0229                     l1210:	
  2076  0229  3001               	movlw	1
  2077  022A                     u955:	
  2078  022A  1003               	clrc
  2079  022B  0CB1               	rrf	___lwdiv@divisor+1,f
  2080  022C  0CB0               	rrf	___lwdiv@divisor,f
  2081  022D  3EFF               	addlw	-1
  2082  022E  1D03               	skipz
  2083  022F  2A2A               	goto	u955
  2084  0230  3001               	movlw	1
  2085  0231  02B7               	subwf	___lwdiv@counter,f
  2086  0232  1D03               	btfss	3,2
  2087  0233  2A13               	goto	l1204
  2088  0234                     l1214:	
  2089  0234  0836               	movf	___lwdiv@quotient+1,w
  2090  0235  00B1               	movwf	?___lwdiv+1
  2091  0236  0835               	movf	___lwdiv@quotient,w
  2092  0237  00B0               	movwf	?___lwdiv
  2093  0238  0008               	return
  2094  0239                     __end_of___lwdiv:	
  2095                           
  2096                           	psect	text7
  2097  03C2                     __ptext7:	
  2098 ;; *************** function _ioc_enable *****************
  2099 ;; Defined at:
  2100 ;;		line 11 in file "ioc_enable.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		None
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2114 ;;      Params:         0       0       0       0
  2115 ;;      Locals:         0       0       0       0
  2116 ;;      Temps:          0       0       0       0
  2117 ;;      Totals:         0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    3
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _ioc_enable
  2130  03C2                     _ioc_enable:	
  2131                           
  2132                           ;ioc_enable.c: 13: INTCONbits.GIE = 1;
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _ioc_enable: []
  2136  03C2  178B               	bsf	11,7	;volatile
  2137                           
  2138                           ;ioc_enable.c: 14: INTCONbits.INTE = 1;
  2139  03C3  160B               	bsf	11,4	;volatile
  2140                           
  2141                           ;ioc_enable.c: 15: OPTION_REGbits.INTEDG = 0;
  2142  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2143  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2144  03C6  1301               	bcf	1,6	;volatile
  2145  03C7  0008               	return
  2146  03C8                     __end_of_ioc_enable:	
  2147                           
  2148                           	psect	text8
  2149  038F                     __ptext8:	
  2150 ;; *************** function _init_ports *****************
  2151 ;; Defined at:
  2152 ;;		line 12 in file "init_ports.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		status,2
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2166 ;;      Params:         0       0       0       0
  2167 ;;      Locals:         0       0       0       0
  2168 ;;      Temps:          0       0       0       0
  2169 ;;      Totals:         0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    3
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _init_ports
  2182  038F                     _init_ports:	
  2183                           
  2184                           ;init_ports.c: 14: ANSEL = 0x00;
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _init_ports: [status,2]
  2188  038F  1283               	bcf	3,5	;RP0=0, select bank2
  2189  0390  1703               	bsf	3,6	;RP1=1, select bank2
  2190  0391  019E               	clrf	30	;volatile
  2191                           
  2192                           ;init_ports.c: 15: ANSELH = 0x00;
  2193  0392  019F               	clrf	31	;volatile
  2194                           
  2195                           ;init_ports.c: 16: CM1CON0 = 0x00;
  2196  0393  0199               	clrf	25	;volatile
  2197                           
  2198                           ;init_ports.c: 17: CM2CON0 = 0x00;
  2199  0394  019A               	clrf	26	;volatile
  2200                           
  2201                           ;init_ports.c: 18: TRISCbits.TRISC0 = 0;
  2202  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0397  1007               	bcf	7,0	;volatile
  2205                           
  2206                           ;init_ports.c: 19: TRISAbits.TRISA2 = 1;
  2207  0398  1505               	bsf	5,2	;volatile
  2208                           
  2209                           ;init_ports.c: 20: TRISCbits.TRISC5 = 1;
  2210  0399  1687               	bsf	7,5	;volatile
  2211                           
  2212                           ;init_ports.c: 21: TRISCbits.TRISC4 = 0;
  2213  039A  1207               	bcf	7,4	;volatile
  2214                           
  2215                           ;init_ports.c: 22: TRISCbits.TRISC3 = 0;
  2216  039B  1187               	bcf	7,3	;volatile
  2217                           
  2218                           ;init_ports.c: 23: PORTCbits.RC4 = 0;
  2219  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2220  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2221  039E  1207               	bcf	7,4	;volatile
  2222                           
  2223                           ;init_ports.c: 24: PORTCbits.RC3 = 0;
  2224  039F  1187               	bcf	7,3	;volatile
  2225                           
  2226                           ;init_ports.c: 25: PORTCbits.RC0 = 0;
  2227  03A0  1007               	bcf	7,0	;volatile
  2228  03A1  0008               	return
  2229  03A2                     __end_of_init_ports:	
  2230                           
  2231                           	psect	text9
  2232  0199                     __ptext9:	
  2233 ;; *************** function _isr *****************
  2234 ;; Defined at:
  2235 ;;		line 15 in file "interrupt isr.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2249 ;;      Params:         0       0       0       0
  2250 ;;      Locals:         0       0       0       0
  2251 ;;      Temps:          0       4       0       0
  2252 ;;      Totals:         0       4       0       0
  2253 ;;Total ram usage:        4 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    2
  2256 ;; This function calls:
  2257 ;;		i1_printf
  2258 ;; This function is called by:
  2259 ;;		Interrupt level 1
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _isr
  2265  0199                     _isr:	
  2266                           
  2267                           ;interrupt isr.c: 17: if(INTCONbits.INTF == 1)
  2268  0199  1C8B               	btfss	11,1	;volatile
  2269  019A  29F0               	goto	L2
  2270                           
  2271                           ;interrupt isr.c: 18: {
  2272                           ;interrupt isr.c: 19: if(PORTCbits.RC5 == 1)
  2273  019B  1E87               	btfss	7,5	;volatile
  2274  019C  29A3               	goto	i1l1452
  2275                           
  2276                           ;interrupt isr.c: 20: {
  2277                           ;interrupt isr.c: 21: count++;
  2278  019D  3001               	movlw	1
  2279  019E  07CE               	addwf	_count,f	;volatile
  2280  019F  1803               	skipnc
  2281  01A0  0ACF               	incf	_count+1,f	;volatile
  2282  01A1  3000               	movlw	0
  2283  01A2  29A8               	goto	L1
  2284  01A3                     i1l1452:	
  2285                           ;interrupt isr.c: 22: }
  2286                           
  2287                           
  2288                           ;interrupt isr.c: 23: else
  2289                           ;interrupt isr.c: 24: {
  2290                           ;interrupt isr.c: 25: count--;
  2291  01A3  30FF               	movlw	255
  2292  01A4  07CE               	addwf	_count,f	;volatile
  2293  01A5  1803               	skipnc
  2294  01A6  0ACF               	incf	_count+1,f	;volatile
  2295  01A7  30FF               	movlw	255
  2296  01A8                     L1:	
  2297  01A8  07CF               	addwf	_count+1,f	;volatile
  2298                           
  2299                           ;interrupt isr.c: 26: }
  2300                           ;interrupt isr.c: 28: if (count >= 100)
  2301  01A9  084F               	movf	_count+1,w	;volatile
  2302  01AA  3A80               	xorlw	128
  2303  01AB  00FF               	movwf	127
  2304  01AC  3080               	movlw	128
  2305  01AD  027F               	subwf	127,w
  2306  01AE  1D03               	skipz
  2307  01AF  29B2               	goto	u139_25
  2308  01B0  3064               	movlw	100
  2309  01B1  024E               	subwf	_count,w	;volatile
  2310  01B2                     u139_25:	
  2311  01B2  1C03               	skipc
  2312  01B3  29BA               	goto	i1l1458
  2313                           
  2314                           ;interrupt isr.c: 29: {
  2315                           ;interrupt isr.c: 30: count = 100;
  2316  01B4  3064               	movlw	100
  2317  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2318  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2319  01B7  00CE               	movwf	_count	;volatile
  2320  01B8  3000               	movlw	0
  2321  01B9  00CF               	movwf	_count+1	;volatile
  2322  01BA                     i1l1458:	
  2323                           
  2324                           ;interrupt isr.c: 31: }
  2325                           ;interrupt isr.c: 32: if(count <= 0)
  2326  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2327  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2328  01BC  084F               	movf	_count+1,w	;volatile
  2329  01BD  3A80               	xorlw	128
  2330  01BE  00FF               	movwf	127
  2331  01BF  3080               	movlw	128
  2332  01C0  027F               	subwf	127,w
  2333  01C1  1D03               	skipz
  2334  01C2  29C5               	goto	u140_25
  2335  01C3  3001               	movlw	1
  2336  01C4  024E               	subwf	_count,w	;volatile
  2337  01C5                     u140_25:	
  2338  01C5  1803               	skipnc
  2339  01C6  29CB               	goto	i1l1462
  2340                           
  2341                           ;interrupt isr.c: 33: {
  2342                           ;interrupt isr.c: 34: count = 0;
  2343  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2344  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2345  01C9  01CE               	clrf	_count	;volatile
  2346  01CA  01CF               	clrf	_count+1	;volatile
  2347  01CB                     i1l1462:	
  2348                           
  2349                           ;interrupt isr.c: 35: }
  2350                           ;interrupt isr.c: 38: if(previous_count != count)
  2351  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2352  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2353  01CD  084F               	movf	_count+1,w	;volatile
  2354  01CE  064D               	xorwf	_previous_count+1,w	;volatile
  2355  01CF  1D03               	skipz
  2356  01D0  29D3               	goto	u141_25
  2357  01D1  084E               	movf	_count,w	;volatile
  2358  01D2  064C               	xorwf	_previous_count,w	;volatile
  2359  01D3                     u141_25:	
  2360  01D3  1903               	skipnz
  2361  01D4  29DD               	goto	i1l1466
  2362                           
  2363                           ;interrupt isr.c: 39: {
  2364                           ;interrupt isr.c: 40: printf("volume position = %d\n", count);
  2365  01D5  084F               	movf	_count+1,w	;volatile
  2366  01D6  00A1               	movwf	?i1_printf+1
  2367  01D7  084E               	movf	_count,w	;volatile
  2368  01D8  00A0               	movwf	?i1_printf
  2369  01D9  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2370  01DA  118A  20E6  118A   	fcall	i1_printf
  2371  01DD                     i1l1466:	
  2372                           
  2373                           ;interrupt isr.c: 41: }
  2374                           ;interrupt isr.c: 42: PORTCbits.RC0 = ~PORTCbits.RC0;
  2375  01DD  1003               	clrc
  2376  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2377  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2378  01E0  1C07               	btfss	7,0	;volatile
  2379  01E1  1403               	setc
  2380  01E2  1C03               	btfss	3,0
  2381  01E3  29E8               	goto	u142_20
  2382  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2383  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2384  01E6  1407               	bsf	7,0	;volatile
  2385  01E7  29EB               	goto	i1l1468
  2386  01E8                     u142_20:	
  2387  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2388  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2389  01EA  1007               	bcf	7,0	;volatile
  2390  01EB                     i1l1468:	
  2391                           
  2392                           ;interrupt isr.c: 43: previous_count = count;
  2393  01EB  084F               	movf	_count+1,w	;volatile
  2394  01EC  00CD               	movwf	_previous_count+1	;volatile
  2395  01ED  084E               	movf	_count,w	;volatile
  2396  01EE  00CC               	movwf	_previous_count	;volatile
  2397                           
  2398                           ;interrupt isr.c: 44: }
  2399                           ;interrupt isr.c: 45: INTCONbits.INTF = 0;
  2400  01EF  108B               	bcf	11,1	;volatile
  2401  01F0                     L2:	
  2402  01F0  082F               	movf	??_isr+3,w
  2403  01F1  00FF               	movwf	127
  2404  01F2  082E               	movf	??_isr+2,w
  2405  01F3  008A               	movwf	10
  2406  01F4  082D               	movf	??_isr+1,w
  2407  01F5  0084               	movwf	4
  2408  01F6  0E2C               	swapf	??_isr^0,w
  2409  01F7  0083               	movwf	3
  2410  01F8  0EFE               	swapf	126,f
  2411  01F9  0E7E               	swapf	126,w
  2412  01FA  0009               	retfie
  2413  01FB                     __end_of_isr:	
  2414                           
  2415                           	psect	intentry
  2416  0004                     __pintentry:	
  2417                           ;incstack = 0
  2418                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2419                           
  2420  0004                     interrupt_function:	
  2421  007E                     saved_w	set	btemp
  2422  0004  00FE               	movwf	btemp
  2423  0005  0E03               	swapf	3,w
  2424  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0008  00AC               	movwf	??_isr
  2427  0009  0804               	movf	4,w
  2428  000A  00AD               	movwf	??_isr+1
  2429  000B  080A               	movf	10,w
  2430  000C  00AE               	movwf	??_isr+2
  2431  000D  087F               	movf	btemp+1,w
  2432  000E  00AF               	movwf	??_isr+3
  2433  000F  118A  2999         	ljmp	_isr
  2434                           
  2435                           	psect	text10
  2436  00E6                     __ptext10:	
  2437 ;; *************** function i1_printf *****************
  2438 ;; Defined at:
  2439 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  f               1    wreg     PTR const unsigned char 
  2442 ;;		 -> STR_2(22), STR_1(15), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  f               1    5[BANK0 ] PTR const unsigned char 
  2445 ;;		 -> STR_2(22), STR_1(15), 
  2446 ;;  printf          4    0        struct .
  2447 ;;  printf          2    9[BANK0 ] unsigned int 
  2448 ;;  printf          2    0        PTR const unsigned char 
  2449 ;;  printf          2    0        unsigned int 
  2450 ;;  printf          1   11[BANK0 ] char 
  2451 ;;  printf          1    8[BANK0 ] char 
  2452 ;;  printf          1    7[BANK0 ] unsigned char 
  2453 ;;  printf          1    6[BANK0 ] PTR void [1]
  2454 ;;		 -> ?i1_printf(2), ?_printf(2), 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  2    0[BANK0 ] int 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2464 ;;      Params:         0       2       0       0
  2465 ;;      Locals:         0       7       0       0
  2466 ;;      Temps:          0       3       0       0
  2467 ;;      Totals:         0      12       0       0
  2468 ;;Total ram usage:       12 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    1
  2471 ;; This function calls:
  2472 ;;		i1___lwdiv
  2473 ;;		i1___lwmod
  2474 ;;		i1_putch
  2475 ;; This function is called by:
  2476 ;;		_isr
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function i1_printf
  2482  00E6                     i1_printf:	
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in i1_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2486                           ;i1printf@f stored from wreg
  2487  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2488  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2489  00E8  00A5               	movwf	i1printf@f
  2490                           
  2491                           ;doprnt.c: 466: va_list ap;
  2492                           ;doprnt.c: 499: signed char c;
  2493                           ;doprnt.c: 506: signed char prec;
  2494                           ;doprnt.c: 508: unsigned char flag;
  2495                           ;doprnt.c: 523: union {
  2496                           ;doprnt.c: 524: unsigned long vd;
  2497                           ;doprnt.c: 525: double integ;
  2498                           ;doprnt.c: 526: } tmpval;
  2499                           ;doprnt.c: 528: unsigned int val;
  2500                           ;doprnt.c: 529: unsigned len;
  2501                           ;doprnt.c: 530: const char * cp;
  2502                           ;doprnt.c: 533: *ap = __va_start();
  2503  00E9  3020               	movlw	(low (?i1_printf| 0))& (0+255)
  2504  00EA  00A2               	movwf	??i1_printf
  2505  00EB  0822               	movf	??i1_printf,w
  2506  00EC  00A6               	movwf	i1printf@ap
  2507  00ED                     i1l1428:	
  2508                           ;doprnt.c: 536: while(c = *f++) {
  2509                           
  2510  00ED  3001               	movlw	1
  2511  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2512  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2513  00F0  07A5               	addwf	i1printf@f,f
  2514  00F1  30FF               	movlw	-1
  2515  00F2  0725               	addwf	i1printf@f,w
  2516  00F3  0084               	movwf	4
  2517  00F4  118A  2275  118A   	fcall	stringdir
  2518  00F7  00A2               	movwf	??i1_printf
  2519  00F8  0822               	movf	??i1_printf,w
  2520  00F9  00AB               	movwf	i1printf@c
  2521  00FA  082B               	movf	i1printf@c,w
  2522  00FB  1903               	btfsc	3,2
  2523  00FC  0008               	return
  2524                           
  2525                           ;doprnt.c: 538: if(c != '%')
  2526  00FD  3025               	movlw	37
  2527  00FE  062B               	xorwf	i1printf@c,w
  2528  00FF  1903               	btfsc	3,2
  2529  0100  2906               	goto	i1l1388
  2530                           
  2531                           ;doprnt.c: 540: {
  2532                           ;doprnt.c: 541: (putch(c) );
  2533  0101  082B               	movf	i1printf@c,w
  2534  0102  118A  23BA  118A   	fcall	i1_putch
  2535                           
  2536                           ;doprnt.c: 542: continue;
  2537  0105  28ED               	goto	i1l1428
  2538  0106                     i1l1388:	
  2539                           
  2540                           ;doprnt.c: 543: }
  2541                           ;doprnt.c: 548: flag = 0;
  2542  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0108  01A7               	clrf	i1printf@flag
  2545                           
  2546                           ;doprnt.c: 822: }
  2547                           
  2548                           ;doprnt.c: 813: continue;
  2549                           
  2550                           ;doprnt.c: 802: default:
  2551                           
  2552                           ;doprnt.c: 698: case 'i':
  2553                           ;doprnt.c: 699: break;
  2554                           
  2555                           ;doprnt.c: 697: case 'd':
  2556                           
  2557                           ;doprnt.c: 638: goto alldone;
  2558                           
  2559                           ;doprnt.c: 637: case 0:
  2560                           
  2561                           ;doprnt.c: 635: switch(c = *f++) {
  2562  0109  3001               	movlw	1
  2563  010A  07A5               	addwf	i1printf@f,f
  2564  010B  30FF               	movlw	-1
  2565  010C  0725               	addwf	i1printf@f,w
  2566  010D  0084               	movwf	4
  2567  010E  118A  2275  118A   	fcall	stringdir
  2568  0111  00AB               	movwf	i1printf@c
  2569                           
  2570                           ; Switch size 1, requested type "space"
  2571                           ; Number of cases is 3, Range of values is 0 to 105
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte           10     6 (average)
  2575                           ; direct_byte          219     7 (fixed)
  2576                           ; jumptable            260     6 (fixed)
  2577                           ;	Chosen strategy is simple_byte
  2578  0112  3A00               	xorlw	0	; case 0
  2579  0113  1903               	skipnz
  2580  0114  2998               	goto	i1l268
  2581  0115  3A64               	xorlw	100	; case 100
  2582  0116  1903               	skipnz
  2583  0117  291C               	goto	i1l1394
  2584  0118  3A0D               	xorlw	13	; case 105
  2585  0119  1903               	skipnz
  2586  011A  291C               	goto	i1l1394
  2587  011B  28ED               	goto	i1l1428
  2588  011C                     i1l1394:	
  2589                           
  2590                           ;doprnt.c: 1253: {
  2591                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2592  011C  0826               	movf	i1printf@ap,w
  2593  011D  0084               	movwf	4
  2594  011E  1383               	bcf	3,7	;select IRP bank0
  2595  011F  0800               	movf	0,w
  2596  0120  00A9               	movwf	i1printf@val
  2597  0121  0A84               	incf	4,f
  2598  0122  0800               	movf	0,w
  2599  0123  00AA               	movwf	i1printf@val+1
  2600  0124  3002               	movlw	2
  2601  0125  00A2               	movwf	??i1_printf
  2602  0126  0822               	movf	??i1_printf,w
  2603  0127  07A6               	addwf	i1printf@ap,f
  2604                           
  2605                           ;doprnt.c: 1261: if((int)val < 0) {
  2606  0128  1FAA               	btfss	i1printf@val+1,7
  2607  0129  2933               	goto	i1l1404
  2608                           
  2609                           ;doprnt.c: 1262: flag |= 0x03;
  2610  012A  3003               	movlw	3
  2611  012B  00A2               	movwf	??i1_printf
  2612  012C  0822               	movf	??i1_printf,w
  2613  012D  04A7               	iorwf	i1printf@flag,f
  2614                           
  2615                           ;doprnt.c: 1263: val = -val;
  2616  012E  09A9               	comf	i1printf@val,f
  2617  012F  09AA               	comf	i1printf@val+1,f
  2618  0130  0AA9               	incf	i1printf@val,f
  2619  0131  1903               	skipnz
  2620  0132  0AAA               	incf	i1printf@val+1,f
  2621  0133                     i1l1404:	
  2622                           
  2623                           ;doprnt.c: 1264: }
  2624                           ;doprnt.c: 1266: }
  2625                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2626  0133  01AB               	clrf	i1printf@c
  2627  0134  0AAB               	incf	i1printf@c,f
  2628  0135  3005               	movlw	5
  2629  0136  062B               	xorwf	i1printf@c,w
  2630  0137  1903               	btfsc	3,2
  2631  0138  2956               	goto	i1l1416
  2632  0139                     i1l1410:	
  2633                           
  2634                           ;doprnt.c: 1306: if(val < dpowers[c])
  2635  0139  082B               	movf	i1printf@c,w
  2636  013A  00A2               	movwf	??i1_printf
  2637  013B  0722               	addwf	??i1_printf,w
  2638  013C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2639  013D  0084               	movwf	4
  2640  013E  118A  2275  118A   	fcall	stringdir
  2641  0141  00A3               	movwf	??i1_printf+1
  2642  0142  118A  2275  118A   	fcall	stringdir
  2643  0145  00A4               	movwf	??i1_printf+2
  2644  0146  0824               	movf	??i1_printf+2,w
  2645  0147  022A               	subwf	i1printf@val+1,w
  2646  0148  1D03               	skipz
  2647  0149  294C               	goto	u131_25
  2648  014A  0823               	movf	??i1_printf+1,w
  2649  014B  0229               	subwf	i1printf@val,w
  2650  014C                     u131_25:	
  2651  014C  1C03               	btfss	3,0
  2652  014D  2956               	goto	i1l1416
  2653                           
  2654                           ;doprnt.c: 1307: break;
  2655  014E  3001               	movlw	1
  2656  014F  00A2               	movwf	??i1_printf
  2657  0150  0822               	movf	??i1_printf,w
  2658  0151  07AB               	addwf	i1printf@c,f
  2659  0152  3005               	movlw	5
  2660  0153  062B               	xorwf	i1printf@c,w
  2661  0154  1D03               	btfss	3,2
  2662  0155  2939               	goto	i1l1410
  2663  0156                     i1l1416:	
  2664                           
  2665                           ;doprnt.c: 1422: {
  2666                           ;doprnt.c: 1438: if(flag & 0x03)
  2667  0156  0827               	movf	i1printf@flag,w
  2668  0157  3903               	andlw	3
  2669  0158  1903               	btfsc	3,2
  2670  0159  295E               	goto	i1l1420
  2671                           
  2672                           ;doprnt.c: 1439: (putch('-') );
  2673  015A  302D               	movlw	45
  2674  015B  118A  23BA  118A   	fcall	i1_putch
  2675  015E                     i1l1420:	
  2676                           
  2677                           ;doprnt.c: 1469: }
  2678                           ;doprnt.c: 1472: prec = c;
  2679  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2680  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0160  082B               	movf	i1printf@c,w
  2682  0161  00A2               	movwf	??i1_printf
  2683  0162  0822               	movf	??i1_printf,w
  2684  0163  00A8               	movwf	i1printf@prec
  2685  0164                     i1l1426:	
  2686                           ;doprnt.c: 1474: while(prec--) {
  2687                           
  2688  0164  30FF               	movlw	255
  2689  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0167  00A2               	movwf	??i1_printf
  2692  0168  0822               	movf	??i1_printf,w
  2693  0169  07A8               	addwf	i1printf@prec,f
  2694  016A  0A28               	incf	i1printf@prec,w
  2695  016B  1903               	btfsc	3,2
  2696  016C  28ED               	goto	i1l1428
  2697                           
  2698                           ;doprnt.c: 1478: {
  2699                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2700  016D  300A               	movlw	10
  2701  016E  00F8               	movwf	i1___lwmod@divisor
  2702  016F  3000               	movlw	0
  2703  0170  00F9               	movwf	i1___lwmod@divisor+1
  2704  0171  0828               	movf	i1printf@prec,w
  2705  0172  00A2               	movwf	??i1_printf
  2706  0173  0722               	addwf	??i1_printf,w
  2707  0174  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2708  0175  0084               	movwf	4
  2709  0176  118A  2275  118A   	fcall	stringdir
  2710  0179  00F0               	movwf	i1___lwdiv@divisor
  2711  017A  118A  2275  118A   	fcall	stringdir
  2712  017D  00F1               	movwf	i1___lwdiv@divisor+1
  2713  017E  082A               	movf	i1printf@val+1,w
  2714  017F  00F3               	movwf	i1___lwdiv@dividend+1
  2715  0180  0829               	movf	i1printf@val,w
  2716  0181  00F2               	movwf	i1___lwdiv@dividend
  2717  0182  118A  2239  118A   	fcall	i1___lwdiv
  2718  0185  0871               	movf	?i1___lwdiv+1,w
  2719  0186  00FB               	movwf	i1___lwmod@dividend+1
  2720  0187  0870               	movf	?i1___lwdiv,w
  2721  0188  00FA               	movwf	i1___lwmod@dividend
  2722  0189  118A  22DE  118A   	fcall	i1___lwmod
  2723  018C  0878               	movf	?i1___lwmod,w
  2724  018D  3E30               	addlw	48
  2725  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2726  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0190  00A3               	movwf	??i1_printf+1
  2728  0191  0823               	movf	??i1_printf+1,w
  2729  0192  00AB               	movwf	i1printf@c
  2730                           
  2731                           ;doprnt.c: 1523: }
  2732                           ;doprnt.c: 1524: (putch(c) );
  2733  0193  082B               	movf	i1printf@c,w
  2734  0194  118A  23BA  118A   	fcall	i1_putch
  2735  0197  2964               	goto	i1l1426
  2736  0198                     i1l268:	
  2737                           ;doprnt.c: 1540: return 0;
  2738                           ;	Return value of i1_printf is never used
  2739                           
  2740                           ;doprnt.c: 1525: }
  2741                           ;doprnt.c: 1533: }
  2742                           ;doprnt.c: 1535: alldone:
  2743                           
  2744  0198  0008               	return
  2745  0199                     __end_ofi1_printf:	
  2746                           
  2747                           	psect	text11
  2748  03BA                     __ptext11:	
  2749 ;; *************** function i1_putch *****************
  2750 ;; Defined at:
  2751 ;;		line 14 in file "putch.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  byte            1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  byte            1    0[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2765 ;;      Params:         0       0       0       0
  2766 ;;      Locals:         1       0       0       0
  2767 ;;      Temps:          0       0       0       0
  2768 ;;      Totals:         1       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		i1_printf
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           
  2779                           ;psect for function i1_putch
  2780  03BA                     i1_putch:	
  2781                           
  2782                           ;incstack = 0
  2783                           ; Regs used in i1_putch: [wreg]
  2784                           ;i1putch@byte stored from wreg
  2785  03BA  00F0               	movwf	i1putch@byte
  2786  03BB                     i1l83:	
  2787                           ;putch.c: 17: continue;
  2788                           
  2789                           ;putch.c: 16: while( ! TXIF)
  2790                           
  2791  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2792  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2793  03BD  1E0C               	btfss	12,4	;volatile
  2794  03BE  2BBB               	goto	i1l83
  2795                           
  2796                           ;putch.c: 18: TXREG = byte;
  2797  03BF  0870               	movf	i1putch@byte,w
  2798  03C0  0099               	movwf	25	;volatile
  2799  03C1  0008               	return
  2800  03C2                     __end_ofi1_putch:	
  2801                           
  2802                           	psect	text12
  2803  02DE                     __ptext12:	
  2804 ;; *************** function i1___lwmod *****************
  2805 ;; Defined at:
  2806 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  divisor         2    8[COMMON] unsigned int 
  2809 ;;  dividend        2   10[COMMON] unsigned int 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  __lwmod         1   13[COMMON] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  2    8[COMMON] unsigned int 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2821 ;;      Params:         4       0       0       0
  2822 ;;      Locals:         1       0       0       0
  2823 ;;      Temps:          1       0       0       0
  2824 ;;      Totals:         6       0       0       0
  2825 ;;Total ram usage:        6 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		i1_printf
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function i1___lwmod
  2836  02DE                     i1___lwmod:	
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  2840  02DE  0878               	movf	i1___lwmod@divisor,w
  2841  02DF  0479               	iorwf	i1___lwmod@divisor+1,w
  2842  02E0  1903               	btfsc	3,2
  2843  02E1  2B0B               	goto	i1l1288
  2844  02E2  01FD               	clrf	i1___lwmod@counter
  2845  02E3  0AFD               	incf	i1___lwmod@counter,f
  2846  02E4                     i1l1278:	
  2847  02E4  1BF9               	btfsc	i1___lwmod@divisor+1,7
  2848  02E5  2AF2               	goto	i1l1280
  2849  02E6  3001               	movlw	1
  2850  02E7                     u112_25:	
  2851  02E7  1003               	clrc
  2852  02E8  0DF8               	rlf	i1___lwmod@divisor,f
  2853  02E9  0DF9               	rlf	i1___lwmod@divisor+1,f
  2854  02EA  3EFF               	addlw	-1
  2855  02EB  1D03               	skipz
  2856  02EC  2AE7               	goto	u112_25
  2857  02ED  3001               	movlw	1
  2858  02EE  00FC               	movwf	??i1___lwmod
  2859  02EF  087C               	movf	??i1___lwmod,w
  2860  02F0  07FD               	addwf	i1___lwmod@counter,f
  2861  02F1  2AE4               	goto	i1l1278
  2862  02F2                     i1l1280:	
  2863  02F2  0879               	movf	i1___lwmod@divisor+1,w
  2864  02F3  027B               	subwf	i1___lwmod@dividend+1,w
  2865  02F4  1D03               	skipz
  2866  02F5  2AF8               	goto	u114_25
  2867  02F6  0878               	movf	i1___lwmod@divisor,w
  2868  02F7  027A               	subwf	i1___lwmod@dividend,w
  2869  02F8                     u114_25:	
  2870  02F8  1C03               	skipc
  2871  02F9  2B00               	goto	i1l1284
  2872  02FA  0878               	movf	i1___lwmod@divisor,w
  2873  02FB  02FA               	subwf	i1___lwmod@dividend,f
  2874  02FC  0879               	movf	i1___lwmod@divisor+1,w
  2875  02FD  1C03               	skipc
  2876  02FE  03FB               	decf	i1___lwmod@dividend+1,f
  2877  02FF  02FB               	subwf	i1___lwmod@dividend+1,f
  2878  0300                     i1l1284:	
  2879  0300  3001               	movlw	1
  2880  0301                     u115_25:	
  2881  0301  1003               	clrc
  2882  0302  0CF9               	rrf	i1___lwmod@divisor+1,f
  2883  0303  0CF8               	rrf	i1___lwmod@divisor,f
  2884  0304  3EFF               	addlw	-1
  2885  0305  1D03               	skipz
  2886  0306  2B01               	goto	u115_25
  2887  0307  3001               	movlw	1
  2888  0308  02FD               	subwf	i1___lwmod@counter,f
  2889  0309  1D03               	btfss	3,2
  2890  030A  2AF2               	goto	i1l1280
  2891  030B                     i1l1288:	
  2892  030B  087B               	movf	i1___lwmod@dividend+1,w
  2893  030C  00F9               	movwf	?i1___lwmod+1
  2894  030D  087A               	movf	i1___lwmod@dividend,w
  2895  030E  00F8               	movwf	?i1___lwmod
  2896  030F  0008               	return
  2897  0310                     __end_ofi1___lwmod:	
  2898                           
  2899                           	psect	text13
  2900  0239                     __ptext13:	
  2901 ;; *************** function i1___lwdiv *****************
  2902 ;; Defined at:
  2903 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  divisor         2    0[COMMON] unsigned int 
  2906 ;;  dividend        2    2[COMMON] unsigned int 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  __lwdiv         2    5[COMMON] unsigned int 
  2909 ;;  __lwdiv         1    7[COMMON] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  2    0[COMMON] unsigned int 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2919 ;;      Params:         4       0       0       0
  2920 ;;      Locals:         3       0       0       0
  2921 ;;      Temps:          1       0       0       0
  2922 ;;      Totals:         8       0       0       0
  2923 ;;Total ram usage:        8 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		i1_printf
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function i1___lwdiv
  2934  0239                     i1___lwdiv:	
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  2938  0239  01F5               	clrf	i1___lwdiv@quotient
  2939  023A  01F6               	clrf	i1___lwdiv@quotient+1
  2940  023B  0870               	movf	i1___lwdiv@divisor,w
  2941  023C  0471               	iorwf	i1___lwdiv@divisor+1,w
  2942  023D  1903               	btfsc	3,2
  2943  023E  2A70               	goto	i1l1266
  2944  023F  01F7               	clrf	i1___lwdiv@counter
  2945  0240  0AF7               	incf	i1___lwdiv@counter,f
  2946  0241                     i1l1254:	
  2947  0241  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  2948  0242  2A4F               	goto	i1l1256
  2949  0243  3001               	movlw	1
  2950  0244                     u105_25:	
  2951  0244  1003               	clrc
  2952  0245  0DF0               	rlf	i1___lwdiv@divisor,f
  2953  0246  0DF1               	rlf	i1___lwdiv@divisor+1,f
  2954  0247  3EFF               	addlw	-1
  2955  0248  1D03               	skipz
  2956  0249  2A44               	goto	u105_25
  2957  024A  3001               	movlw	1
  2958  024B  00F4               	movwf	??i1___lwdiv
  2959  024C  0874               	movf	??i1___lwdiv,w
  2960  024D  07F7               	addwf	i1___lwdiv@counter,f
  2961  024E  2A41               	goto	i1l1254
  2962  024F                     i1l1256:	
  2963  024F  3001               	movlw	1
  2964  0250                     u107_25:	
  2965  0250  1003               	clrc
  2966  0251  0DF5               	rlf	i1___lwdiv@quotient,f
  2967  0252  0DF6               	rlf	i1___lwdiv@quotient+1,f
  2968  0253  3EFF               	addlw	-1
  2969  0254  1D03               	skipz
  2970  0255  2A50               	goto	u107_25
  2971  0256  0871               	movf	i1___lwdiv@divisor+1,w
  2972  0257  0273               	subwf	i1___lwdiv@dividend+1,w
  2973  0258  1D03               	skipz
  2974  0259  2A5C               	goto	u108_25
  2975  025A  0870               	movf	i1___lwdiv@divisor,w
  2976  025B  0272               	subwf	i1___lwdiv@dividend,w
  2977  025C                     u108_25:	
  2978  025C  1C03               	skipc
  2979  025D  2A65               	goto	i1l1262
  2980  025E  0870               	movf	i1___lwdiv@divisor,w
  2981  025F  02F2               	subwf	i1___lwdiv@dividend,f
  2982  0260  0871               	movf	i1___lwdiv@divisor+1,w
  2983  0261  1C03               	skipc
  2984  0262  03F3               	decf	i1___lwdiv@dividend+1,f
  2985  0263  02F3               	subwf	i1___lwdiv@dividend+1,f
  2986  0264  1475               	bsf	i1___lwdiv@quotient,0
  2987  0265                     i1l1262:	
  2988  0265  3001               	movlw	1
  2989  0266                     u109_25:	
  2990  0266  1003               	clrc
  2991  0267  0CF1               	rrf	i1___lwdiv@divisor+1,f
  2992  0268  0CF0               	rrf	i1___lwdiv@divisor,f
  2993  0269  3EFF               	addlw	-1
  2994  026A  1D03               	skipz
  2995  026B  2A66               	goto	u109_25
  2996  026C  3001               	movlw	1
  2997  026D  02F7               	subwf	i1___lwdiv@counter,f
  2998  026E  1D03               	btfss	3,2
  2999  026F  2A4F               	goto	i1l1256
  3000  0270                     i1l1266:	
  3001  0270  0876               	movf	i1___lwdiv@quotient+1,w
  3002  0271  00F1               	movwf	?i1___lwdiv+1
  3003  0272  0875               	movf	i1___lwdiv@quotient,w
  3004  0273  00F0               	movwf	?i1___lwdiv
  3005  0274  0008               	return
  3006  0275                     __end_ofi1___lwdiv:	
  3007  007E                     btemp	set	126	;btemp
  3008  007E                     wtemp0	set	126


Data Sizes:
    Strings     37
    Constant    10
    Data        33
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      54
    BANK1            80     31      62
    BANK2            80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?i1_printf(BANK0[2]), ?_printf(COMMON[2]), 

    transmit_character@character	PTR unsigned char  size(1) Largest target is 31
		 -> main@ton(BANK1[31]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_printf->i1___lwmod
    i1___lwmod->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    _isr->i1_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0    1168
                                             40 BANK0      4     4      0
                                              0 BANK1     31    31      0
                         _init_ports
                         _ioc_enable
                             _printf
                          _set_usart
                 _transmit_character
 ---------------------------------------------------------------------------------
 (1) _transmit_character                                   2     2      0      97
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _set_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    18      0    1045
                                             30 BANK0     10    10      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                             24 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ioc_enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0     833
                                             12 BANK0      4     4      0
                           i1_printf
 ---------------------------------------------------------------------------------
 (4) i1_printf                                            20    18      2     833
                                              0 BANK0     12    10      2
                          i1___lwdiv
                          i1___lwmod
                            i1_putch
 ---------------------------------------------------------------------------------
 (5) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_ports
   _ioc_enable
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _set_usart
   _transmit_character

 _isr (ROOT)
   i1_printf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1F      3E       5       77.5%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      36       3       67.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      82      10        0.0%
ABS                  0      0      82       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jan 19 19:09:26 2018

        ?_transmit_character 0070                            pc 0002                  __CFG_CP$OFF 0000  
                         l25 033E                           l83 03B5                           fsr 0004  
                        l130 0367                          l268 00E5                 __CFG_CPD$OFF 0000  
                        u915 0208                          u935 0214                          u945 0220  
                        u955 022A                          u985 02B5                          _isr 0199  
                        fsr0 0004                          indf 0000         ??_transmit_character 0030  
                       l1210 0229                         l1202 0205                         l1204 0213  
                       l1214 0234                         l1232 02CE                         l1226 02B2  
                       l1330 0361                         l1228 02C0                         l1236 02D9  
                       l1360 0084                         l1344 0067                         l1370 00A9  
                       l1354 007E                         l1338 0051                         l1366 00A1  
                       l1376 00AF                         l1378 0038                         ?_isr 0070  
                       STR_1 029B                         STR_2 0285                         u1005 02C6  
                       u1015 02CF                         u1235 0097                         u1360 0320  
                       i1l83 03BB                         _TRMT 04C1                         _TXIF 0064  
                       _a_de 0051                         _b_de 0050                         _main 0310  
                       btemp 007E                         start 0011                __CFG_IESO$OFF 0000  
            __end_ofi1_putch 03C2                __CFG_MCLRE$ON 0000                        ??_isr 002C  
                      ?_main 0070                __CFG_WDTE$OFF 0000                        _ANSEL 011E  
            __end_of___lwdiv 0239              __end_of___lwmod 02DE                        i1l268 0198  
                      _SPBRG 0099                        _TXREG 0019               __CFG_FCMEN$OFF 0000  
         i1___lwmod@dividend 007A              __end_of_dpowers 0285                        _count 004E  
                      _putch 03B2               __CFG_BOREN$OFF 0000                        pclath 000A  
                      status 0003                        wtemp0 007E           __size_ofi1___lwdiv 003C  
         __size_ofi1___lwmod 0032             __end_ofi1_printf 0199                   i1printf@ap 0026  
            __initialization 0013                 __end_of_main 033F                       ??_main 0048  
                     ?_putch 0070                       _ANSELH 011F                       i1l1410 0139  
                     i1l1420 015E                       i1l1404 0133                       i1l1262 0265  
                     i1l1254 0241                       i1l1256 024F                       i1l1280 02F2  
                     i1l1416 0156                       i1l1266 0270                       i1l1426 0164  
                     i1l1284 0300                       i1l1428 00ED                       i1l1452 01A3  
                     u112_25 02E7                       i1l1278 02E4                       i1l1462 01CB  
                     i1l1288 030B                       i1l1394 011C                       i1l1466 01DD  
                     i1l1458 01BA                       i1l1388 0106                       i1l1468 01EB  
                     u105_25 0244                       u114_25 02F8                       u107_25 0250  
                     u115_25 0301                       u131_25 014C                       u108_25 025C  
                     u140_25 01C5                       u109_25 0266                       u141_25 01D3  
                     u142_20 01E8                       u139_25 01B2                    ??i1_putch 0070  
             __CFG_PWRTE$OFF 0000                    ??___lwdiv 0034                    ??___lwmod 003C  
                     _printf 0031            __end_ofi1___lwdiv 0275            __end_ofi1___lwmod 0310  
                     saved_w 007E      __end_of__initialization 002E                  i1printf@val 0029  
            _current_state_b 0054               __pcstackCOMMON 0070                 __pidataBANK0 03C8  
               __pidataBANK1 033F                  i1putch@byte 0070                __end_of_putch 03BA  
             _OPTION_REGbits 0081                    ?i1_printf 0020                      ??_putch 0030  
                 __pbssBANK0 004C                _current_state 0055                   __pmaintext 0310  
                 __pintentry 0004                      _CM1CON0 0119                      _CM2CON0 011A  
                    ?_printf 0070           __size_of_set_usart 0013                   ??i1_printf 0022  
__size_of_transmit_character 001E                   __stringtab 0275                      i1_putch 03BA  
                 _ioc_enable 03C2                      ___lwdiv 01FB                      ___lwmod 02AA  
                 _init_ports 038F                      __ptext1 035E                      __ptext2 037C  
                    __ptext3 0031                      __ptext4 03B2                      __ptext5 02AA  
                    __ptext6 01FB                      __ptext7 03C2                      __ptext8 038F  
                    __ptext9 0199              __size_of_printf 00B5                      _dpowers 027B  
          i1___lwdiv@divisor 0070                 __size_of_isr 0062            i1___lwdiv@counter 0077  
                    main@ton 00BF         end_of_initialization 002E            __end_of_set_usart 038F  
                  _RCSTAbits 0018                      printf@c 0047                      printf@f 0044  
                  _PORTAbits 0005                    _PORTCbits 0007                    _TRISAbits 0085  
                  _TRISBbits 0086                    _TRISCbits 0087                    i1___lwdiv 0239  
                  i1___lwmod 02DE                  ?_ioc_enable 0070                    _TXSTAbits 0098  
               i1printf@flag 0027                 i1printf@prec 0028                  ?_init_ports 0070  
          i1___lwmod@divisor 0078            i1___lwmod@counter 007D               __end_of_printf 00E6  
        start_initialization 0013                    i1printf@c 002B                    i1printf@f 0025  
                __end_of_isr 01FB                   ?i1___lwdiv 0070                   ?i1___lwmod 0078  
          __size_ofi1_printf 00B3                   init_fetch0 03A2                  __pdataBANK0 0054  
                __pdataBANK1 00A0                     ??_printf 003E          __size_of_ioc_enable 0006  
                  ___latbits 0001                __pcstackBANK0 0020                __pcstackBANK1 00BF  
                   ?i1_putch 0070          __size_of_init_ports 0013             ___lwdiv@dividend 0032  
                   ?___lwdiv 0030                     ?___lwmod 0038                    __pstrings 0275  
 __end_of_transmit_character 037C             ___lwdiv@quotient 0035                  ??i1___lwdiv 0074  
                ??i1___lwmod 007C               __size_of_putch 0008            interrupt_function 0004  
                  _set_usart 037C                    main@F1554 00A0                  __stringbase 027A  
                 printf@flag 0042                   printf@prec 0043                     i1_printf 00E6  
               ??_ioc_enable 0030             __size_ofi1_putch 0008                   ?_set_usart 0070  
           __size_of___lwdiv 003E             __size_of___lwmod 0034                 ??_init_ports 0030  
         __end_of__stringtab 027B           __end_of_ioc_enable 03C8                     _a_status 0053  
                   _b_status 0052              ___lwdiv@divisor 0030  transmit_character@character 0031  
            ___lwdiv@counter 0037                     __ptext10 00E6                     __ptext11 03BA  
                   __ptext12 02DE                     __ptext13 0239           i1___lwdiv@dividend 0072  
              __size_of_main 002F           __end_of_init_ports 03A2               _previous_count 004C  
                  printf@val 0045           i1___lwdiv@quotient 0075                    putch@byte 0030  
                 _INTCONbits 000B                     init_ram0 03A6                     intlevel1 0000  
           ___lwmod@dividend 003A                    stringcode 0275                  ??_set_usart 0030  
                   printf@ap 0041              ___lwmod@divisor 0038              ___lwmod@counter 003D  
                   stringdir 0275                     stringtab 0275            __CFG_FOSC$INTRCIO 0000  
         _transmit_character 035E  
